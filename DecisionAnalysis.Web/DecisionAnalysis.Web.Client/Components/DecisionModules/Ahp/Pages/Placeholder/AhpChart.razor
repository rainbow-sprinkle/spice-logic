@using ValueType = Syncfusion.Blazor.Charts.ValueType
<div class="w-100" style="background-color: transparent; height: 90%">
    @if (type == "bar")
    {
        <SfChart Title="@Title">
            <ChartPrimaryXAxis ValueType="ValueType.Category"></ChartPrimaryXAxis>

            <ChartSeriesCollection>
                <ChartSeries DataSource="@Datas" XName="X" YName="YValue" Type="ChartSeriesType.Column">
                </ChartSeries>
            </ChartSeriesCollection>
        </SfChart>
    }
    else if(type == "circle")
    {
        <SfAccumulationChart Title="@Title">
            <AccumulationChartSeriesCollection>
                <AccumulationChartSeries DataSource="@Datas" XName="X" YName="YValue">
                </AccumulationChartSeries>
            </AccumulationChartSeriesCollection>
        </SfAccumulationChart>
    }
    else if(type == "polar")
    {
        
        <SfChart>
            <ChartPrimaryXAxis ValueType="ValueType.Category">
            </ChartPrimaryXAxis>

            <ChartSeriesCollection>
                <ChartSeries DataSource="@_weatherReports" XName="X" High="High" Low="Low"
                             Type="ChartSeriesType.Polar" DrawType="ChartDrawType.RangeColumn">
                </ChartSeries>
            </ChartSeriesCollection>
        </SfChart>
    }
    else if(type == "line")
    {
        <SfChart>
            <ChartPrimaryXAxis ValueType="ValueType.DateTime">
            </ChartPrimaryXAxis>

            <ChartCrosshairSettings Enable="true" LineType="LineType.Vertical"></ChartCrosshairSettings>

            <ChartTooltipSettings Enable="true" Shared="true" Format="${series.name} : ${point.x} : ${point.y}"></ChartTooltipSettings>

            <ChartSeriesCollection>
                <ChartSeries DataSource="@_salesDetails" XName="XValue" YName="YValue" Type="ChartSeriesType.Line">
                </ChartSeries>
                <ChartSeries DataSource="@_salesDetails" XName="XValue" YName="YValue1" Type="ChartSeriesType.Line">
                </ChartSeries>
                <ChartSeries DataSource="@_salesDetails" XName="XValue" YName="YValue2" Type="ChartSeriesType.Line">
                </ChartSeries>
            </ChartSeriesCollection>
        </SfChart>
    }
</div>

@code{
    public class ChartData
    {
        public string X { get; set; }
        public double YValue { get; set; }
    }

    public List<ChartData> Datas = [];

    [Parameter]
    public string? Title {get;set;}
    [Parameter]
    public List<string> Items { get; set; }
    [Parameter]
    public List<double> Values{ get; set; }
    [Parameter]
    public string type{ get; set; }

    protected override void OnInitialized()
    {
        for(var i = 0; i < Items.Count; i++)
        {
            Datas.Add(new ChartData { X = Items[i], YValue = Values[i] });
        }
    }

    public class ChartDataS
    {
        public string X { get; set; }
        public double Low { get; set; }
        public double High { get; set; }
    }

    private readonly List<ChartDataS> _weatherReports =
    [
        new ChartDataS { X = "Jan", Low = 0.7, High = 6.1 },
        new ChartDataS { X = "Feb", Low = 1.3, High = 6.3 },
        new ChartDataS { X = "Mar", Low = 1.9, High = 8.5 },
        new ChartDataS { X = "Apr", Low = 3.1, High = 10.8 },
        new ChartDataS { X = "May", Low = 5.7, High = 14.40 },
        new ChartDataS { X = "Jun", Low = 8.4, High = 16.90 },
        new ChartDataS { X = "Jul", Low = 10.6, High = 19.20 },
        new ChartDataS { X = "Aug", Low = 10.5, High = 18.9 },
        new ChartDataS { X = "Sep", Low = 8.5, High = 16.1 },
        new ChartDataS { X = "Oct", Low = 6.0, High = 12.5 },
        new ChartDataS { X = "Nov", Low = 1.5, High = 6.9 },
        new ChartDataS { X = "Dec", Low = 5.1, High = 12.1 }
    ];

    public class ChartDataSs
    {
        public DateTime XValue { get; set; }
        public double YValue { get; set; }
        public double YValue1 { get; set; }
        public double YValue2 { get; set; }
    }

    private readonly List<ChartDataSs> _salesDetails =
    [
        new ChartDataSs { XValue = new DateTime(2000, 2, 11), YValue = 14, YValue1 = 39, YValue2 = 60 },
        new ChartDataSs { XValue = new DateTime(2000, 9, 4), YValue = 20, YValue1 = 30, YValue2 = 55 },
        new ChartDataSs { XValue = new DateTime(2001, 2, 11), YValue = 25, YValue1 = 28, YValue2 = 48 },
        new ChartDataSs { XValue = new DateTime(2001, 9, 16), YValue = 21, YValue1 = 35, YValue2 = 57 },
        new ChartDataSs { XValue = new DateTime(2002, 2, 7), YValue = 13, YValue1 = 39, YValue2 = 62 },
        new ChartDataSs { XValue = new DateTime(2002, 9, 7), YValue = 18, YValue1 = 41, YValue2 = 64 },
        new ChartDataSs { XValue = new DateTime(2003, 2, 11), YValue = 24, YValue1 = 45, YValue2 = 57 },
        new ChartDataSs { XValue = new DateTime(2003, 9, 14), YValue = 23, YValue1 = 48, YValue2 = 53 },
        new ChartDataSs { XValue = new DateTime(2004, 2, 6), YValue = 19, YValue1 = 54, YValue2 = 63 },
        new ChartDataSs { XValue = new DateTime(2004, 9, 6), YValue = 31, YValue1 = 55, YValue2 = 50 },
        new ChartDataSs { XValue = new DateTime(2005, 2, 11), YValue = 39, YValue1 = 57, YValue2 = 66 },
        new ChartDataSs { XValue = new DateTime(2005, 9, 11), YValue = 50, YValue1 = 60, YValue2 = 65 },
        new ChartDataSs { XValue = new DateTime(2006, 2, 11), YValue = 24, YValue1 = 60, YValue2 = 79 }
    ];
}