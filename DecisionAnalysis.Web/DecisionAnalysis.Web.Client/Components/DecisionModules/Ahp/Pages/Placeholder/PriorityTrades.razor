@page "/pri"
@rendermode InteractiveAuto

<div class="w-100 position-relative" style="height: 90%; padding-top: 39px">
    <div class="@(_matrixModalState ? "d-block" : "d-none") position-absolute modal-container matrix-modal">
        <div class="w-100 py-2 d-flex flex-row justify-content-center position-relative modal-header">
            <b>Set your relative preference</b>
            <span role="button" class="position-absolute top-1 end-1 d-flex justify-content-center align-items-center icon-normal" @onclick="() => _matrixModalState = false"><i class="fa fa-window-close"></i></span>
        </div>
        <Judge OnModal="@modalShow" OnAction="@chartValues" Width=320 Step=20 HandShow="false" />
    </div>
    <SfSplitter Height="93%" Width="100%">
        <SplitterPanes>
            <SplitterPane Size="@(leftBarState ? "50%" : "100%")" Max="100%" Min="@(leftBarState ? "50%" : "100%")">
                <ContentTemplate>
                    <div class="position-relative h-100 d-flex flex-column" style="width: @(leftBarState ? "100%" : "98%")">
                        <div class="form-check checkbox-big" @onclick="() => {matrixState = !matrixState;}">
                            <input class="form-check-input" type="checkbox" value="" id="flexCheckDefault">
                            <label class="form-check-label" for="flexCheckDefault">
                                Matrix View
                            </label>
                        </div>
                        <div class="w-100 d-flex flex-column justify-content-center">
                            @if (matrixState == false)
                            {
                                <InputPagination />
                                <div class="d-flex justify-content-center" style="overflow: auto">
                                    <Judge OnModal=modalShow OnAction=chartValues Width=160 Step=10 />
                                </div>
                            }
                            else
                            {
                                <div style="overflow: auto">
                                    <MatrixTable Items="@MatrixItems" Values="@MatrixValues" OpenModal="@openModal" />
                                </div>
                            }
                        </div>
         
                        <div class="@(leftBarState ? "d-none" : "d-block") h-100 d-flex flex-row justify-content-center position-absolute top-0 h-100 d-flex vertical-line-bar" style="right: -26px;" role="button" @onclick="() => leftBarState = true">
                            <span class="icon-small"><i class="fa fa-solid fa-chevron-left"></i></span>
                        </div>
                    </div>
                </ContentTemplate>
            </SplitterPane>
            <SplitterPane Size="@(leftBarState ? "50%" : "0%")" Max="@(leftBarState ? "50%" : "0%")" Min="@(leftBarState ? "50%" : "0%")">
                <ContentTemplate>
                    <div class="d-flex flex-row position-relative pe-3 h-100">
                        <div class="h-100 d-flex flex-row justify-content-center vertical-line-bar" role="button" @onclick="() => leftBarState = false">
                            <span class="icon-small"><i class="fa fa-solid fa-chevron-right"></i></span>
                        </div>
                        <div class="w-100 h-100 d-flex justify-content-center align-items-center">
                            <AhpChart Title="Priorities" @key="index" Items="@Items" Values="@Values" type="bar" />
                        </div>
                    </div>
                </ContentTemplate>
            </SplitterPane>
        </SplitterPanes>
    </SfSplitter>
</div>

@code {
    private bool leftBarState = true;
    private bool matrixState = false;
    private bool consistentState = false;
    private int Left = 1;
    private int Right = 1;
    private int index = 0;
    private string LeftName = "";
    private string RightName = "";
    private bool modalState = false;
    private bool _matrixModalState;
    private void chartValues(int left, int right)
    {
        Left = left;
        Right = right;
        var numL = 100.0 / (left + right) * left;
        var numR = 100.0 / (left + right) * right;
        Values[0] = numL;
        Values[1] = numR;
        index++;
        StateHasChanged();
    }
    private void modalShow(string leftName, string rightName)
    {
        LeftName = leftName;
        RightName = rightName;
        modalState = true;
        StateHasChanged();
    }

    [Parameter]
    public bool Modal { get; set; }

    private List<string> Items = ["abc", "def"];
    private List<double> Values = [0.3, 1];

    private List<string> MatrixItems =
    [
        "abc",
        "def",
        "ghi"
    ];
    private List<List<double>> MatrixValues =
    [
        [1, 0.3, 0.6],
        [0.5, 1, 0.6],
        [0.3, 0.7, 1]
    ];

    private void openModal()
    {
        _matrixModalState = true;
        StateHasChanged();
    }
}