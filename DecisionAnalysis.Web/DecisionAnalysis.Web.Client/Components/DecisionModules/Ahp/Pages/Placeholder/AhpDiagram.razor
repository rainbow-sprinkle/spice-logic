@page "/diagram"
@using Orientation = Syncfusion.Blazor.Diagram.Orientation
@using System.Text.Json
@rendermode InteractiveAuto

<SfDiagramComponent @ref="@_diagram" ID="element" Width="100%" Height="500px" InteractionController="DiagramInteractions.ZoomPan" ConnectorCreating="@ConnectorCreating" NodeCreating="@NodeCreating">
    <DataSourceSettings ID="Name" ParentID="Category" DataSource="DataSource"></DataSourceSettings>
    <Layout Type="LayoutType.HierarchicalTree" HorizontalSpacing="30" Orientation="LayoutOrientation.TopToBottom" VerticalSpacing="30" HorizontalAlignment="HorizontalAlignment.Auto" VerticalAlignment="VerticalAlignment.Auto" GetLayoutInfo="GetLayoutInfo">
        <LayoutMargin Top="50" Bottom="50" Right="50" Left="50"></LayoutMargin>
    </Layout>
</SfDiagramComponent>

@*<SfDiagramOverviewComponent Height="150px" SourceID="element"></SfDiagramOverviewComponent>*@
@code {
   
    SfDiagramComponent? _diagram;
   
    private void ConnectorCreating(IDiagramObject connector)
    {
        ((Connector)connector).Type = ConnectorSegmentType.Orthogonal;
        ((Connector)connector).TargetDecorator.Shape = DecoratorShape.None;
        ((Connector)connector).Style = new ShapeStyle { StrokeColor = "#6d6d6d" };
        ((Connector)connector).Constraints = 0;
        ((Connector)connector).CornerRadius = 5;
    }

    private TreeInfo GetLayoutInfo(IDiagramObject obj, TreeInfo options)
    {
        options.EnableSubTree = true;
        options.Orientation = Orientation.Horizontal;
        return options;
    }

    private void NodeCreating(IDiagramObject obj)
    {
        Node? node = obj as Node;
        
        if (node?.Data is JsonElement)
        {
            node.Data = JsonSerializer.Deserialize<HierarchicalDetails>(node.Data.ToString() ?? string.Empty);
        }
      
        HierarchicalDetails hierarchicalData = node?.Data as HierarchicalDetails ?? new HierarchicalDetails();
       
        if (node != null)
        {
            node.Style = new ShapeStyle { Fill = "#659be5", StrokeColor = "none", StrokeWidth = 2 };
            node.BackgroundColor = "#659be5";
            node.Width = 150;
            node.Height = 50;
            node.Annotations =
            [
                new()
                {
                    Content = hierarchicalData.Name,
                    Style = new TextStyle { Color = "white" }
                }
            ];
        }
    }

    //Create the hierarchical details with needed properties.
    public class HierarchicalDetails
    {
        public string Name { get; set; }
        public string FillColor { get; set; }
        public string Category { get; set; }
    }
   
    //Create the data source with node name and fill color values.
    public readonly List<HierarchicalDetails> DataSource =
    [
        new HierarchicalDetails { Name = "Diagram", Category = "", FillColor = "#659be5" },
        new HierarchicalDetails { Name = "Layout", Category = "Diagram", FillColor = "#659be5" },
        new HierarchicalDetails { Name = "Tree layout", Category = "Layout", FillColor = "#659be5" },
        new HierarchicalDetails { Name = "Organizational chart", Category = "Layout", FillColor = "#659be5" },
        new HierarchicalDetails { Name = "Hierarchical tree", Category = "Tree layout", FillColor = "#659be5" },
        new HierarchicalDetails { Name = "Radial tree", Category = "Tree layout", FillColor = "#659be5" },
        new HierarchicalDetails { Name = "Mind map", Category = "Hierarchical tree", FillColor = "#659be5" },
        new HierarchicalDetails { Name = "Family tree", Category = "Hierarchical tree", FillColor = "#659be5" },
        new HierarchicalDetails { Name = "Management", Category = "Organizational chart", FillColor = "#659be5" },
        new HierarchicalDetails { Name = "Human resources", Category = "Management", FillColor = "#659be5" },
        new HierarchicalDetails { Name = "University", Category = "Management", FillColor = "#659be5" },
        new HierarchicalDetails { Name = "Business", Category = "#Management", FillColor = "#659be5" }
    ];
}